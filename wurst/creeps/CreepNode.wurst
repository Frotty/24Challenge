package CreepNode
import Entity
import Creep
import TempGroups
import GameConstants
import UnitObjEditing

public CreepNode node_color_left
public CreepNode node_color_right
public CreepNode node_bw_left
public CreepNode node_bw_right

public vec2 color_Main = vec2(-2000,-2500)
public vec2 bw_Main = vec2(2100,2134)

public class CreepNode
	vec2 target
	unit inrangeDummy
	player creepOwner
	trigger t = CreateTrigger()
	
	static function orderAttack()
		let data = GetTriggerUnit().getUserData() castTo Entity
		let sdata = GetTriggeringTrigger().getSource().getUserData() castTo CreepNode
		if data instanceof Creep and data.owner == sdata.creepOwner
			let cdata = data castTo Creep
			cdata.actor.issuePointOrder("attack", sdata.target)
	
	construct(unit dummyNode, vec2 target, player creepOwner, real radius)
		this.target = target
		this.creepOwner = creepOwner
		inrangeDummy = createUnit(DUMMY_PLAYER, DUMMY_UNIT_ID, dummyNode.getPos3fake(), angle(0))
		inrangeDummy.setUserData(this castTo int)
		inrangeDummy.hide()
		t.registerUnitInRangeSource(inrangeDummy, radius)
		t.addAction(function CreepNode.orderAttack)
		
		dummyNode.remove()
		
		
		
	
public function initCreepNodes()
	initColorNodes()
	initBWNodes()

function initColorNodes()
	node_color_left = new CreepNode(gg_unit_e001_0013, bw_Main, TEAM_ONE_CPU, 128.)
	node_color_right = new CreepNode(gg_unit_e001_0012, bw_Main, TEAM_ONE_CPU, 128.)

	
function initBWNodes()
	node_bw_left = new CreepNode(gg_unit_e001_0009, color_Main, TEAM_TWO_CPU, 128.)
	node_bw_right = new CreepNode(gg_unit_e001_0011, color_Main, TEAM_TWO_CPU, 128.)



	